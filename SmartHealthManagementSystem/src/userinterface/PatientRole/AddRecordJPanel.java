/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.Ecoe;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Patient.Patient;
import Business.Patient.Record;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientDoctorWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Sahil Sonawane
 */
public class AddRecordJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;    
    private Ecoe ecoe;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private PatientOrganization patientOrganization;
    private Patient patient;
    /**
     * Creates new form AddVitalSignsJPanel
     */
    public AddRecordJPanel(JPanel userProcessContainer,UserAccount userAccount, PatientOrganization patientOrganization, Enterprise enterprise,Ecoe ecoSyste) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoe = ecoe;
        this.userAccount = userAccount;
        this.patientOrganization = (PatientOrganization)patientOrganization;
        this.enterprise = enterprise;
        this.patient=userAccount.getPatient();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        systalicBPJTextField = new javax.swing.JTextField();
        weightJTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        breatheRateJTextField = new javax.swing.JTextField();
        heartrateJTextField = new javax.swing.JTextField();
        addJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        standTimeJTextField = new javax.swing.JTextField();
        movementClockJTextField = new javax.swing.JTextField();
        workoutTimeJTextField = new javax.swing.JTextField();
        totTimeJTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(167, 221, 214));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(systalicBPJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 110, -1));
        add(weightJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 110, -1));

        jLabel8.setBackground(new java.awt.Color(167, 221, 214));
        jLabel8.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel8.setText("Respiratory rate");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        jLabel9.setBackground(new java.awt.Color(167, 221, 214));
        jLabel9.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel9.setText("Heart rate");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, -1, -1));

        jLabel10.setBackground(new java.awt.Color(167, 221, 214));
        jLabel10.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel10.setText("Systolic blood pressure");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));

        jLabel11.setBackground(new java.awt.Color(167, 221, 214));
        jLabel11.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel11.setText("Weight in pounds");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, -1, -1));

        breatheRateJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breatheRateJTextFieldActionPerformed(evt);
            }
        });
        add(breatheRateJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 110, -1));
        add(heartrateJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 110, -1));

        addJButton.setBackground(new java.awt.Color(0, 24, 91));
        addJButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        addJButton.setForeground(new java.awt.Color(255, 255, 255));
        addJButton.setText("Add Record ");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 480, -1, -1));

        backJButton.setBackground(new java.awt.Color(0, 24, 91));
        backJButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, -1, -1));

        jLabel13.setBackground(new java.awt.Color(167, 221, 214));
        jLabel13.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel13.setText("Total Time (mins)");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, -1, -1));

        standTimeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standTimeJTextFieldActionPerformed(evt);
            }
        });
        add(standTimeJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 230, 100, -1));
        add(movementClockJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 290, 100, -1));
        add(workoutTimeJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 350, 100, -1));

        totTimeJTextField.setEditable(false);
        totTimeJTextField.setEnabled(false);
        add(totTimeJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 410, 100, -1));

        jLabel15.setBackground(new java.awt.Color(167, 221, 214));
        jLabel15.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel15.setText("Stand Time (mins)");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, -1, -1));

        jLabel16.setBackground(new java.awt.Color(167, 221, 214));
        jLabel16.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel16.setText("Move Time (mins)");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, -1, -1));

        jLabel17.setBackground(new java.awt.Color(167, 221, 214));
        jLabel17.setFont(new java.awt.Font("Savoye LET", 0, 30)); // NOI18N
        jLabel17.setText("Excercise Time (mins)");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, -1, 40));

        jPanel1.setBackground(new java.awt.Color(0, 24, 91));

        jLabel12.setBackground(new java.awt.Color(0, 24, 91));
        jLabel12.setFont(new java.awt.Font("Lucida Grande", 3, 30)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Add Vital Signs and Fitness Record");
        jPanel1.add(jLabel12);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 560, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void breatheRateJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breatheRateJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breatheRateJTextFieldActionPerformed

    private void standTimeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standTimeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_standTimeJTextFieldActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        try{
            float breatheRate = Float.parseFloat(breatheRateJTextField.getText());
            float heartrate = Float.parseFloat(heartrateJTextField.getText());
            float systalicBP = Float.parseFloat(systalicBPJTextField.getText());
            float weight = Float.parseFloat(weightJTextField.getText());
            int standTime = Integer.parseInt(standTimeJTextField.getText());
            int movementClock= Integer.parseInt(movementClockJTextField.getText());
            int workoutTimet = Integer.parseInt(workoutTimeJTextField.getText());
           
            
                    
            Date date = new Date();
            Boolean isNormal = false;
            Boolean needsToWorkout = false;
            int age = patient.getAge();
            
            int totTime =  movementClock+workoutTimet+standTime;

            Record vs = patient.getRecordHistory().addRecord();
            vs.setbreatheRate(breatheRate);
            vs.setheartrate(heartrate);
            vs.setsystalicBP(systalicBP);
            vs.setweight(weight);
            vs.setmovementClock(movementClock);
            vs.setStandTime(standTime);
            vs.setworkoutTime(workoutTimet);
            vs.settotTime(totTime);
            vs.setDate(date);


            
            for(Organization o :enterprise.getOrganizationDirectory().getOrganizationList()){
                if(o instanceof DoctorOrganization){
                    DoctorOrganization dO =(DoctorOrganization)o;
                        PatientDoctorWorkRequest request = new PatientDoctorWorkRequest();
                        request.setDate();
                        request.setRecord(vs);                        
                        dO.getWorkQueue().getWorkRequestList().add(request);
                        userAccount.getWorkQueue().getWorkRequestList().add(request);                                 
                }
            }
            
            
            if(age>=1&&age<=3)
            {
                if((breatheRate>=20 && breatheRate<=30)&&(heartrate>=80 && heartrate<=130)&&(systalicBP>=80 && systalicBP<=110)&&(weight>=22 && weight<=31))
                {
                    isNormal = true;
                }
                else
                {
                    isNormal = false;
                }
            }
            if(age>=4&&age<=5)
            {
                if((breatheRate>=20 && breatheRate<=30)&&(heartrate>=80 && heartrate<=120)&&(systalicBP>=80 && systalicBP<=110)&&(weight>=31 && weight<=40))
                {
                    isNormal = true;
                }
                else
                {
                    isNormal = false;
                }
            }
            if(age>=6&&age<=12)
            {
                if((breatheRate>=20 && breatheRate<=30)&&(heartrate>=70 && heartrate<=110)&&(systalicBP>=80 && systalicBP<=120)&&(weight>=41 && weight<=92))
                {
                    isNormal = true;
                }
                else
                {
                    isNormal = false;
                }
            }
            if(age>=13)
            {
                if((breatheRate>=12 && breatheRate<=20)&&(heartrate>=55 && heartrate<=105)&&(systalicBP>=110 && systalicBP<=120)&&(weight>110))
                {
                    isNormal = true;
                }
                else
                {
                    isNormal = false;
                }
            }
            
            if(totTime<=120){
                needsToWorkout = true;
            }
            else{
                needsToWorkout = false;
            }

            if(isNormal == true)
            {
                vs.setisNormal("Normal");
            }
            else{
                vs.setisNormal("Abnormal");
            }
            
            if(needsToWorkout == true)
            {
                vs.setneedsToWorkout("Need More Excercise");
            }
            else{
                vs.setneedsToWorkout("Reach the Standard");
            }
            

            

                       
            JOptionPane.showMessageDialog(null, "Add Record Information Successfully!", "Warning", JOptionPane.WARNING_MESSAGE);
            resetFields();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Alert! Please enter appropriate values! ", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void resetFields() {
        breatheRateJTextField.setText("");
        heartrateJTextField.setText("");
        systalicBPJTextField.setText("");
        weightJTextField.setText("");
        standTimeJTextField.setText("");
        movementClockJTextField.setText("");
        workoutTimeJTextField.setText("");
        totTimeJTextField.setText("");       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField workoutTimeJTextField;
    private javax.swing.JTextField heartrateJTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField movementClockJTextField;
    private javax.swing.JTextField breatheRateJTextField;
    private javax.swing.JTextField standTimeJTextField;
    private javax.swing.JTextField systalicBPJTextField;
    private javax.swing.JTextField totTimeJTextField;
    private javax.swing.JTextField weightJTextField;
    // End of variables declaration//GEN-END:variables
}
