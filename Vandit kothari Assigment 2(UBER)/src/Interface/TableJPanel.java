/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Uber;
import Business.UberCatalog;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class TableJPanel extends javax.swing.JPanel {
    private JPanel rightJPanel;
    private UberCatalog uberCatalog;
    private ArrayList<Uber> carList;
    private ArrayList<Uber> templist;
    
    
    private int minseats;
    private int maxseats;


    TableJPanel(JPanel rightJPanel, ArrayList<Uber> result, UberCatalog uberCatalog) {
        initComponents();
        this.rightJPanel = rightJPanel;
        this.carList = result;
        this.uberCatalog = uberCatalog;
        populateTable();
    }

   

    
    private void populateTable(){
            DefaultTableModel dtm = (DefaultTableModel) tblDetails1.getModel();
            dtm.setRowCount(0);
            for (Uber uber : carList){
                Object[] row = new Object [9];
                row [0] = uber;
                row [1] = uber.getManufacturedYear();
                row [2] = uber.getMaxSeats();
                row [3] = uber.getMinSeats();
                row [4] = uber.getSerialNumber();
                row [5] = uber.getModelNumber();
                row [6] = uber.getAvailableCity();
                row [7] = uber.isAvailable();
                row [8] = uber.isMaintainanceCerti();
                
                dtm.addRow(row);
                                 
    }
            int n = dtm.getRowCount();
            txtCount.setText((String.valueOf(n)));
         
    }
   
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetails1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBack3 = new javax.swing.JButton();
        txtCount = new javax.swing.JTextField();
        btnSearchBrand = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnSerialNumber = new javax.swing.JButton();
        btnAvailCity = new javax.swing.JButton();
        btnManuYear = new javax.swing.JButton();
        btnModelNumber = new javax.swing.JButton();
        btnAvailStatus = new javax.swing.JButton();
        btnMainCerti = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maxSeatsTxtField = new javax.swing.JTextField();
        minSeatsTxtField = new javax.swing.JTextField();
        btnMinMax = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtFieldd = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        tblDetails1.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        tblDetails1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand Name", "Manufacturing Year", "Maximum Seats", "Minimum Seats", "Serial Number", "Model Number", "Available City", "Aavailable", "Main. Certi. Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetails1);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setText("                                       TABLE ");

        btnBack3.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnBack3.setText("< Back");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        txtCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountActionPerformed(evt);
            }
        });

        btnSearchBrand.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnSearchBrand.setText("Search car by Brand Name :");
        btnSearchBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBrandActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jLabel2.setText("Count :");

        btnSerialNumber.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnSerialNumber.setText("Search Car By Serial Number ");
        btnSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumberActionPerformed(evt);
            }
        });

        btnAvailCity.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnAvailCity.setText("Search Car By Available City ");
        btnAvailCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailCityActionPerformed(evt);
            }
        });

        btnManuYear.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnManuYear.setText("Search Car By Manufacturing Year  ");
        btnManuYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManuYearActionPerformed(evt);
            }
        });

        btnModelNumber.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnModelNumber.setText("Search Car By Model Number ");
        btnModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNumberActionPerformed(evt);
            }
        });

        btnAvailStatus.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnAvailStatus.setText("Search car By Availability Status ");
        btnAvailStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailStatusActionPerformed(evt);
            }
        });

        btnMainCerti.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnMainCerti.setText("Search Car by Maintainance certificate expiration Status ");
        btnMainCerti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainCertiActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jLabel4.setText("             Maximum Seats :");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jLabel3.setText("         Minimum Seats :");

        btnMinMax.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnMinMax.setText("Search by seat Requirements");
        btnMinMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinMaxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jLabel5.setText("           Enter your Inputs Below ");

        txtFieldd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFielddActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnMainCerti, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(btnSearchBrand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                .addComponent(btnAvailStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(btnMinMax, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(110, 110, 110)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(maxSeatsTxtField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtFieldd)
                                            .addComponent(btnManuYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(98, 98, 98))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnView)
                                        .addGap(185, 185, 185)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(minSeatsTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(btnAvailCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack3)
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnView))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSerialNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchBrand))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAvailStatus)
                            .addComponent(btnAvailCity)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMainCerti)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnManuYear)
                            .addComponent(btnModelNumber))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(maxSeatsTxtField)
                                    .addComponent(btnMinMax)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minSeatsTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(123, 123, 123))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        rightJPanel.remove(this);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.previous(rightJPanel);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnSearchBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBrandActionPerformed
       
        
        ArrayList<Uber> result = uberCatalog.searchBrand1(txtFieldd.getText(), carList);
        if (result.size() == 0){
            JOptionPane.showMessageDialog(null,"The Brand Name you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
           //ArrayList<Uber> result = uberCatalog.searchBrand(txtField.getText(), uberCatalog.getUberList());
            UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }
        txtFieldd.setText("");

    }//GEN-LAST:event_btnSearchBrandActionPerformed

    private void txtCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountActionPerformed

    private void btnSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumberActionPerformed

        String resulttt = txtFieldd.getText();
        if (resulttt == null || resulttt.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the Serial Number", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtFieldd.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"You need to put valid value", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        {
            ArrayList<Uber> result = uberCatalog.searchManuYear(txtFieldd.getText(), carList);
            UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);

             
        }
        txtFieldd.setText("");
    }//GEN-LAST:event_btnSerialNumberActionPerformed

    private void btnAvailCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailCityActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> result = uberCatalog.searchAvailCity(txtFieldd.getText(), carList);
        if (result.size() == 0){
            JOptionPane.showMessageDialog(null,"The Available City Name you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            
            UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);


            txtFieldd.setText("");
        }
    }//GEN-LAST:event_btnAvailCityActionPerformed

    private void btnManuYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManuYearActionPerformed
        // TODO add your handling code here:
        String resulttt = txtFieldd.getText();
        if (resulttt == null || resulttt.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the manufacturing year", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Integer.parseInt(txtFieldd.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"You need to put valid value", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        {
            ArrayList<Uber> result = uberCatalog.searchManuYear(txtFieldd.getText(), carList);
            UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);

           
        }
        txtFieldd.setText("");
    }//GEN-LAST:event_btnManuYearActionPerformed

    private void btnModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNumberActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> result = uberCatalog.searchModelNumber(txtFieldd.getText(), carList);
        if (result.size() == 0)
        {
            JOptionPane.showMessageDialog(null,"The Model Number you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            
            UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }

    }//GEN-LAST:event_btnModelNumberActionPerformed

    private void btnAvailStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailStatusActionPerformed
       
        String resulttt = txtFieldd.getText();
        if (resulttt == null || resulttt.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the Availability status", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        {
            ArrayList<Uber> result = uberCatalog.searchAvailStatus(txtFieldd.getText(), carList);
            UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);

            
        }
        txtFieldd.setText("");
    }//GEN-LAST:event_btnAvailStatusActionPerformed

    private void btnMainCertiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainCertiActionPerformed
        // TODO add your handling code here:
        String resulttt = txtFieldd.getText();
        if (resulttt == null || resulttt.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the car maintainance certificate status", " Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        {
            ArrayList<Uber> result = uberCatalog.searchMainCerti(txtFieldd.getText(), carList);
            UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
            rightJPanel.add("UpdatedResultsPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);

            txtFieldd.setText("");
        }
    }//GEN-LAST:event_btnMainCertiActionPerformed

    private void btnMinMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinMaxActionPerformed
        // TODO add your handling code here:
        int minSeats = Integer.parseInt(minSeatsTxtField.getText());
        int maxSeats = Integer.parseInt(maxSeatsTxtField.getText());
        
        ArrayList<Uber> result = uberCatalog.searchSeatsAvail(minSeats , maxSeats, carList);

        UpdatedResultsPanel panel = new UpdatedResultsPanel(rightJPanel,result);
        rightJPanel.add("UpdatedResultsPanel", panel);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next (rightJPanel);
        minSeatsTxtField.setText("");
        maxSeatsTxtField.setText("");
    }//GEN-LAST:event_btnMinMaxActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDetails1.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from Table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Uber uber = (Uber) tblDetails1.getValueAt((selectedRow), 0);
            ViewJPanel amPanel = new ViewJPanel (rightJPanel, uber);
            rightJPanel.add("ViewJPanel",amPanel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next(rightJPanel);
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtFielddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFielddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFielddActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailCity;
    private javax.swing.JButton btnAvailStatus;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnMainCerti;
    private javax.swing.JButton btnManuYear;
    private javax.swing.JButton btnMinMax;
    private javax.swing.JButton btnModelNumber;
    private javax.swing.JButton btnSearchBrand;
    private javax.swing.JButton btnSerialNumber;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxSeatsTxtField;
    private javax.swing.JTextField minSeatsTxtField;
    private javax.swing.JTable tblDetails1;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextField txtFieldd;
    // End of variables declaration//GEN-END:variables

    void populateTable(UberCatalog uberCatalog, String all) {
         //To change body of generated methods, choose Tools | Templates.
         DefaultTableModel dtm = (DefaultTableModel) tblDetails1.getModel();
            dtm.setRowCount(0);
            for (Uber uber : carList){
                Object[] row = new Object [9];
                row [0] = uber;
                row [1] = uber.getManufacturedYear();
                row [2] = uber.getMaxSeats();
                row [3] = uber.getMinSeats();
                row [4] = uber.getSerialNumber();
                row [5] = uber.getModelNumber();
                row [6] = uber.getAvailableCity();
                row [7] = uber.isAvailable();
                row [8] = uber.isMaintainanceCerti();
                
                dtm.addRow(row);
                                 
    }
        
    }

}