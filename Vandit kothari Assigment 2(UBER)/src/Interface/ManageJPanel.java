/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Uber;
import Business.UberCatalog;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class ManageJPanel extends javax.swing.JPanel {
    private JPanel rightJPanel;
    private UberCatalog uberCatalog;

    
        
//To change body of generated methods, choose Tools | Templates.

    ManageJPanel(JPanel rightJPanel, UberCatalog uberCatalog) {
        initComponents();
        this.rightJPanel = rightJPanel;
        this.uberCatalog = uberCatalog;
        populateTable(uberCatalog, "all"); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();
        txtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSearchBrand = new javax.swing.JButton();
        btnManuYear = new javax.swing.JButton();
        btnSerialNumber = new javax.swing.JButton();
        btnModelNumber = new javax.swing.JButton();
        btnAvailCity = new javax.swing.JButton();
        btnAvailStatus = new javax.swing.JButton();
        btnMainCerti = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        minSeatsTxtField = new javax.swing.JTextField();
        maxSeatsTxtField = new javax.swing.JTextField();
        btnMinMax = new javax.swing.JButton();
        btnFirstAvailCar = new javax.swing.JButton();
        btnManuList = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setText("Manage ");

        tblDetails.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand Name", "Manufacturing Year", "Maximum Seats", "Minimum Seats", "Serial Number", "Model Number", "Available City", "Aavailable", "Main. Certi. Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetails);
        if (tblDetails.getColumnModel().getColumnCount() > 0) {
            tblDetails.getColumnModel().getColumn(0).setResizable(false);
            tblDetails.getColumnModel().getColumn(1).setResizable(false);
            tblDetails.getColumnModel().getColumn(2).setResizable(false);
            tblDetails.getColumnModel().getColumn(3).setResizable(false);
            tblDetails.getColumnModel().getColumn(4).setResizable(false);
            tblDetails.getColumnModel().getColumn(5).setResizable(false);
            tblDetails.getColumnModel().getColumn(6).setResizable(false);
            tblDetails.getColumnModel().getColumn(7).setResizable(false);
            tblDetails.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jLabel2.setText("       Enter your Inputs Below ");

        btnSearchBrand.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnSearchBrand.setText("Search car by Brand Name ");
        btnSearchBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBrandActionPerformed(evt);
            }
        });

        btnManuYear.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnManuYear.setText("Search Car By Manufacturing Year  ");
        btnManuYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManuYearActionPerformed(evt);
            }
        });

        btnSerialNumber.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnSerialNumber.setText("Search Car By Serial Number ");
        btnSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumberActionPerformed(evt);
            }
        });

        btnModelNumber.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnModelNumber.setText("Search Car By Model Number ");
        btnModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNumberActionPerformed(evt);
            }
        });

        btnAvailCity.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnAvailCity.setText("Search Car By Available City ");
        btnAvailCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailCityActionPerformed(evt);
            }
        });

        btnAvailStatus.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnAvailStatus.setText("Search car By Availability Status ");
        btnAvailStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailStatusActionPerformed(evt);
            }
        });

        btnMainCerti.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnMainCerti.setText("Search Car by Maintainance certificate expiration Status ");
        btnMainCerti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainCertiActionPerformed(evt);
            }
        });

        btnBack2.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnBack2.setText("< Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        btnMinMax.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnMinMax.setText("Search by seat Requirements");
        btnMinMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinMaxActionPerformed(evt);
            }
        });

        btnFirstAvailCar.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnFirstAvailCar.setText(" First Available Car");
        btnFirstAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailCarActionPerformed(evt);
            }
        });

        btnManuList.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        btnManuList.setText("Manufacturers List");
        btnManuList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManuListActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jLabel3.setText("           Minimum Seats :");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jLabel4.setText("         Maximum Seats :");

        btnView.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(395, 395, 395)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnView)
                            .addGap(314, 314, 314)
                            .addComponent(jButton1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFirstAvailCar)
                                .addGap(27, 27, 27)
                                .addComponent(btnManuList, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSearchBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnMainCerti, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnAvailStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnMinMax, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(maxSeatsTxtField)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtField)
                                    .addComponent(btnManuYear, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(104, 104, 104)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAvailCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnModelNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSerialNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(minSeatsTxtField)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBack2)
                            .addComponent(btnManuList)
                            .addComponent(btnFirstAvailCar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(jButton1))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchBrand)
                            .addComponent(btnSerialNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAvailStatus)
                            .addComponent(btnAvailCity)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnModelNumber)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnManuYear)
                            .addComponent(btnMainCerti))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMinMax)
                            .addComponent(maxSeatsTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minSeatsTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBrandActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> result = uberCatalog.searchBrand1(txtField.getText(), uberCatalog.getUberList());
        if (result.size() == 0){
            JOptionPane.showMessageDialog(null,"The Brand Name you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
           //ArrayList<Uber> result = uberCatalog.searchBrand(txtField.getText(), uberCatalog.getUberList());
            TableJPanel panel = new TableJPanel(rightJPanel,result,uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }
        txtField.setText("");
        
    }//GEN-LAST:event_btnSearchBrandActionPerformed

    private void btnManuYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManuYearActionPerformed
        // TODO add your handling code here:
        String resultt = txtField.getText();
        if (resultt == null || resultt.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Please enter the manufacturing year", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         try {
            Integer.parseInt(txtField.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"You need to put valid value", " Warning", JOptionPane.WARNING_MESSAGE);
        }
         {
            ArrayList<Uber> result = uberCatalog.searchManuYear(txtField.getText(), uberCatalog.getUberList());
            TableJPanel panel = new TableJPanel(rightJPanel, result, uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
               }
         txtField.setText("");
    }//GEN-LAST:event_btnManuYearActionPerformed
/**/
    private void btnSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumberActionPerformed

        String resulttt = txtField.getText();
        if (resulttt == null || resulttt.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Please enter the Serial Number", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         try {
            Integer.parseInt(txtField.getText());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"You need to put valid value", " Warning", JOptionPane.WARNING_MESSAGE);
        }
         {
            ArrayList<Uber> result = uberCatalog.searchSerialNumber(txtField.getText(),uberCatalog.getUberList());
            TableJPanel panel = new TableJPanel(rightJPanel, result, uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
               }
         txtField.setText("");
    }//GEN-LAST:event_btnSerialNumberActionPerformed

    private void btnModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNumberActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> result = uberCatalog.searchModelNumber(txtField.getText(),uberCatalog.getUberList());
        if (result.size() == 0)
        {
            JOptionPane.showMessageDialog(null,"The Model Number you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else 
        {
            //ArrayList<Uber> result = uberCatalog.searchModelNumber();
            TableJPanel panel = new TableJPanel(rightJPanel,result,uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        }
        
    }//GEN-LAST:event_btnModelNumberActionPerformed

    private void btnAvailCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailCityActionPerformed
        // TODO add your handling code here:
        ArrayList<Uber> result = uberCatalog.searchAvailCity(txtField.getText(), uberCatalog.getUberList());
        if (result.size() == 0){
            JOptionPane.showMessageDialog(null,"The Available City Name you entered does not exist", " Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
           // ArrayList<Uber> result = uberCatalog.searchAvailCity(txtField.getText());
            TableJPanel panel = new TableJPanel(rightJPanel,result,uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
            
            txtField.setText("");
        }
    }//GEN-LAST:event_btnAvailCityActionPerformed

    private void btnAvailStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailStatusActionPerformed
        // TODO add your handling code here:
        /*if(uberCatalog.searchAvailStatus(txtField.getText())!= null)
       {
           ArrayList<Uber> result = uberCatalog.searchAvailStatus(txtField.getText());
            TableJPanel panel = new TableJPanel(rightJPanel,result);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
            
            txtField.setText("");
        }
        */
        String resulttt = txtField.getText();
        if (resulttt == null || resulttt.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Please enter the Availability status", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         
         {
            ArrayList<Uber> result = uberCatalog.searchAvailStatus(txtField.getText(), uberCatalog.getUberList());
            TableJPanel panel = new TableJPanel(rightJPanel, result, uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
        
        
       
       // ArrayList<Uber> resulttt = uberCatalog.searchManuYear(txtField.getText());
               }
         txtField.setText("");
    }//GEN-LAST:event_btnAvailStatusActionPerformed

    private void btnMainCertiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainCertiActionPerformed
        // TODO add your handling code here:
         String resulttt = txtField.getText();
        if (resulttt == null || resulttt.equals("")) 
        {
        JOptionPane.showMessageDialog(null,"Please enter the car maintainance certificate status", " Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
       {
           ArrayList<Uber> result = uberCatalog.searchMainCerti(txtField.getText(), uberCatalog.getUberList());
            TableJPanel panel = new TableJPanel(rightJPanel, result, uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
            
            txtField.setText("");
        }
    }//GEN-LAST:event_btnMainCertiActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        rightJPanel.remove(this);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.previous(rightJPanel);
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void btnMinMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinMaxActionPerformed
        // TODO add your handling code here:
        int minSeats = Integer.parseInt(minSeatsTxtField.getText());
        int maxSeats = Integer.parseInt(maxSeatsTxtField.getText());
       /* int minseats = minSeatsString.equals("") ? Integer.MIN_VALUE : Integer.parseInt(minSeatsString);
        int maxseats = maxSeatsString.equals("") ? Integer.MAX_VALUE: Integer.parseInt(maxSeatsString);
       */
       ArrayList<Uber> result = uberCatalog.searchSeatsAvail(minSeats , maxSeats, uberCatalog.getUberList());
       
        TableJPanel panel = new TableJPanel(rightJPanel, result, uberCatalog);
        rightJPanel.add("TableJPanel", panel);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next (rightJPanel);
        
        maxSeatsTxtField.setText("");
        minSeatsTxtField.setText("");
    }//GEN-LAST:event_btnMinMaxActionPerformed

    private void btnFirstAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailCarActionPerformed
        // TODO add your handling code here:
        
       
            ArrayList<Uber> result = uberCatalog.searchFirstAvailUber(txtField.getText(), uberCatalog.getUberList());
            TableJPanel panel = new TableJPanel(rightJPanel, result, uberCatalog);
            rightJPanel.add("TableJPanel", panel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next (rightJPanel);
            
            txtField.setText("");
        
    }//GEN-LAST:event_btnFirstAvailCarActionPerformed

    private void btnManuListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManuListActionPerformed
        // TODO add your handling code here:
        {
        ManuJPanel amPanel = new ManuJPanel (rightJPanel, uberCatalog);
        rightJPanel.add("ManuJPanel",amPanel);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next(rightJPanel);  
        }
    }//GEN-LAST:event_btnManuListActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDetails.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from Table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Uber uber = (Uber) tblDetails.getValueAt((selectedRow), 0);
            ViewJPanel amPanel = new ViewJPanel (rightJPanel, uber);
            rightJPanel.add("ViewJPanel",amPanel);
            CardLayout layout = (CardLayout) rightJPanel.getLayout();
            layout.next(rightJPanel);
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDetails.getSelectedRow();
        if(selectedRow>=0){
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                Uber uber = (Uber)tblDetails.getValueAt(selectedRow, 0);
                uberCatalog.deleteUber(uber);
                populateTable1( uberCatalog.getUberList());
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailCity;
    private javax.swing.JButton btnAvailStatus;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnFirstAvailCar;
    private javax.swing.JButton btnMainCerti;
    private javax.swing.JButton btnManuList;
    private javax.swing.JButton btnManuYear;
    private javax.swing.JButton btnMinMax;
    private javax.swing.JButton btnModelNumber;
    private javax.swing.JButton btnSearchBrand;
    private javax.swing.JButton btnSerialNumber;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxSeatsTxtField;
    private javax.swing.JTextField minSeatsTxtField;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTextField txtField;
    // End of variables declaration//GEN-END:variables

   

    
    void populateTable(UberCatalog uberList, String all) {
         //To change body of generated methods, choose Tools | Templates.
         DefaultTableModel dtm = (DefaultTableModel) tblDetails.getModel();
            dtm.setRowCount(0);
            for (Uber uber : uberCatalog.getUberList())
            {
                if(uber.getBrand().equals(all)|| all.equals("all")){
                Object[] row = new Object [9];
                row [0] = uber;
                row [1] = uber.getManufacturedYear();
                row [2] = uber.getMaxSeats();
                row [3] = uber.getMinSeats();
                row [4] = uber.getSerialNumber();
                row [5] = uber.getModelNumber();
                row [6] = uber.getAvailableCity();
                row [7] = uber.isAvailable();
                row [8] = uber.isMaintainanceCerti();
                
                dtm.addRow(row);
                
            }
    }

    
    }

    private void populateTable1(ArrayList<Uber> uberList) {
         //To change body of generated methods, choose Tools | Templates.
         DefaultTableModel dtm = (DefaultTableModel) tblDetails.getModel();
            dtm.setRowCount(0);
            for (Uber uber : uberCatalog.getUberList())
            {
                
                Object[] row = new Object [9];
                row [0] = uber;
                row [1] = uber.getManufacturedYear();
                row [2] = uber.getMaxSeats();
                row [3] = uber.getMinSeats();
                row [4] = uber.getSerialNumber();
                row [5] = uber.getModelNumber();
                row [6] = uber.getAvailableCity();
                row [7] = uber.isAvailable();
                row [8] = uber.isMaintainanceCerti();
                
                dtm.addRow(row);
                
            }
    }

    }
   
